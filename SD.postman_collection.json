{
	"info": {
		"_postman_id": "363593cb-e803-42e8-af4e-92343edb111d",
		"name": "SD",
		"description": "Assignment 3 in the Software Design course 2018-2019",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:8080/questions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1dadd1b9-bfe6-4120-a728-a3a7b34543d4",
						"exec": [
							"pm.test(\"Response status is OK\", function(){",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"There are more than 3 questions\", function(){",
							"   var questions = pm.response.json();",
							"   pm.expect(questions.length).to.be.gt(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/questions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"questions"
					]
				},
				"description": "List all questions"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/questions/title/one",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/questions/title/one",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"questions",
						"title",
						"one"
					]
				},
				"description": "Filter questions by title (partial words are accepted)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/questions/tag/tag2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb8ab815-987b-4827-aa38-9b06a8716a43",
						"exec": [
							"pm.test(\"Response status is OK\", function(){",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"The response has 1 item\", function(){",
							"   var questions = pm.response.json();",
							"   pm.expect(questions.length).to.be.equal(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/questions/tag/tag2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"questions",
						"tag",
						"tag2"
					]
				},
				"description": "Filter questions by tag (the exact tag name should be written)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/details",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/question/1/answers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers"
					]
				},
				"description": "List all the answers of a question (the score is not considered)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers-by-score",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/question/1/answers-by-score",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers-by-score"
					]
				},
				"description": "List all answers of a question by score."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\":\"This is the first answer.\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/question/1/answers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers"
					]
				},
				"description": "Add one new answer"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\":\"Updated answer.\"\n\t\n}"
				},
				"url": {
					"raw": "http://localhost:8080/question/1/answers/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers",
						"5"
					]
				},
				"description": "Update answer"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers/1",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/question/1/answers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers",
						"1"
					]
				},
				"description": "Delete answer (only allowed for the answers for the current user)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/questions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f62399e-5427-4b41-8154-4b3b85885ec2",
						"exec": [
							"pm.test(\"The response is a json\", function(){",
							"   pm. response.type.should.equal(‘application/json’);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Vara\",\n    \"text\": \"Cand vine??\",\n    \"tags\": [\"vara\", \"aici\" ]\n}"
				},
				"url": {
					"raw": "http://localhost:8080/questions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"questions"
					]
				},
				"description": "Add question"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/questions/1/vote?isUpVote=true",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/questions/1/vote?isUpVote=false",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"questions",
						"1",
						"vote"
					],
					"query": [
						{
							"key": "isUpVote",
							"value": "false"
						}
					]
				},
				"description": "UpVote a question"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers/1/vote?isUpVote=false",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/question/1/answers/1/vote?isUpVote=false",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers",
						"1",
						"vote"
					],
					"query": [
						{
							"key": "isUpVote",
							"value": "false"
						}
					]
				},
				"description": "Vote an answer"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/question/1/answers/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f023f37e-7a40-40d1-a399-d13974fde010",
						"exec": [
							"pm.test(\"Response status is 500 server error\", function(){",
							"    pm.response.code === 500;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "000",
							"type": "string"
						},
						{
							"key": "username",
							"value": "ana",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/question/1/answers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"question",
						"1",
						"answers",
						"1"
					]
				},
				"description": "Test that we cannot delete again the answer 1 already deleted."
			},
			"response": []
		}
	]
}